name: Build fat JAR with BandageLayout JNI

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]   # ðŸ”‘ only deploy on version tags like v1.0.0
  pull_request:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - name: Build native (Linux)
        run: mvn -B -DskipTests package
      - name: Upload Linux native
        uses: actions/upload-artifact@v4
        with:
          name: linux-native
          path: target/classes/native/libbandagelayout.so

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - name: Build native (macOS)
        run: mvn -B -DskipTests package
      - name: Upload macOS native
        uses: actions/upload-artifact@v4
        with:
          name: macos-native
          path: target/classes/native/libbandagelayout.dylib

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - name: Install MSYS2 and dependencies
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          install: >
            git
            make
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-zlib
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-make
            binutils
      - name: Build native (Windows)
        shell: msys2 {0}
        run: |
          echo "JAVA_HOME=$JAVA_HOME"
          make -C src/main/native
      - name: List OGDF build tree (Windows)
        if: always()
        shell: msys2 {0}
        run: |
          echo "=== Full OGDF build tree ==="
          ls -R src/main/native/build/ogdf-install || true
          ls -R src/main/native/build/ogdf-build || true
      - name: Upload Windows native
        uses: actions/upload-artifact@v4
        with:
          name: windows-native
          path: src/main/native/build/bandagelayout.dll

  merge-and-deploy:
    runs-on: ubuntu-latest
    needs: [ build-linux, build-macos, build-windows ]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          server-id: central
          server-username: CENTRAL_TOKEN_ID
          server-password: CENTRAL_TOKEN_PASSWORD

      - name: Download Linux native
        uses: actions/download-artifact@v4
        with:
          name: linux-native
          path: target/classes/native

      - name: Download macOS native
        uses: actions/download-artifact@v4
        with:
          name: macos-native
          path: target/classes/native

      - name: Download Windows native
        uses: actions/download-artifact@v4
        with:
          name: windows-native
          path: target/classes/native

      - name: Verify natives
        run: ls -R target/classes/native

      - name: Build fat JAR
        run: mvn -B package -DskipTests

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: bandage-layout-jni
          path: target/bandage-layout-jni-*.jar

      # ðŸ”‘ GPG key import for release
      - name: Import GPG key
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import

      - name: Deploy to Maven Central
        if: startsWith(github.ref, 'refs/tags/')
        run: mvn -B deploy -DskipTests
        env:
          CENTRAL_TOKEN_ID: ${{ secrets.CENTRAL_TOKEN_ID }}
          CENTRAL_TOKEN_PASSWORD: ${{ secrets.CENTRAL_TOKEN_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GPG_TTY: $(tty)
